-- MySQL Script generated by MySQL Workbench
-- So 25 Mai 2014 12:10:38 CEST
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DB1695063
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `DB1695063` ;
CREATE SCHEMA IF NOT EXISTS `DB1695063` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `DB1695063` ;

-- -----------------------------------------------------
-- Table `DB1695063`.`gaestebuch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`gaestebuch` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`gaestebuch` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `eintrag` TEXT NOT NULL,
  `benutzername` VARCHAR(45) NOT NULL,
  `autorisiert` INT UNSIGNED NOT NULL,
  INDEX `aut` USING BTREE (`autorisiert` ASC)  COMMENT 'Zum schnellen Filtern von unautorisierten Nachrichten',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Enthält alle Autorisierten und Unautorisierten Gästebucheinträge';


-- -----------------------------------------------------
-- Table `DB1695063`.`mitglieder`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`mitglieder` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`mitglieder` (
  `benutzername` VARCHAR(20) NOT NULL,
  `geschlecht` INT NOT NULL,
  `vorname` VARCHAR(45) NOT NULL,
  `nachname` VARCHAR(45) NOT NULL,
  `geburtsdatum` DATE NOT NULL,
  `plz` VARCHAR(5) NOT NULL,
  `wohnort` VARCHAR(45) NOT NULL,
  `strasse` VARCHAR(45) NOT NULL,
  `hausnummer` INT UNSIGNED NOT NULL,
  `hnrzusatz` VARCHAR(20) NULL,
  `email` VARCHAR(45) NOT NULL,
  `telefon` VARCHAR(15) NOT NULL,
  `sprache` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`benutzername`),
  INDEX `Wohnort` (`wohnort` ASC))
ENGINE = InnoDB
COMMENT = 'Enthält alle persönlichen Daten eines jeden Mitglieds';


-- -----------------------------------------------------
-- Table `DB1695063`.`login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`login` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`login` (
  `benutzername` VARCHAR(20) NOT NULL,
  `passwort` VARCHAR(32) NOT NULL,
  `rolle` INT NOT NULL COMMENT '1: Admin;' /* comment truncated */ /*2: Nutzer*/,
  PRIMARY KEY (`benutzername`),
  INDEX `Rolle` (`rolle` ASC),
  CONSTRAINT `fk_login_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `DB1695063`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Benutzernamen und Passwörter (in MD5)';


-- -----------------------------------------------------
-- Table `DB1695063`.`profilbild`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`profilbild` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`profilbild` (
  `benutzername` VARCHAR(20) NOT NULL,
  `bild` BLOB NULL,
  PRIMARY KEY (`benutzername`),
  CONSTRAINT `fk_profilbild_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `DB1695063`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Speichert die Profilbilder';


-- -----------------------------------------------------
-- Table `DB1695063`.`besucherzaehler`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`besucherzaehler` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`besucherzaehler` (
  `zaehler` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`zaehler`))
ENGINE = InnoDB
COMMENT = 'Besucherzähler';


-- -----------------------------------------------------
-- Table `DB1695063`.`tutoren`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`tutoren` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`tutoren` (
  `benutzername` VARCHAR(20) NOT NULL,
  `umkreis` INT UNSIGNED NOT NULL,
  `stundenlohn` INT UNSIGNED NOT NULL,
  `bewertung` FLOAT UNSIGNED NOT NULL,
  `gewichtung` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`benutzername`),
  CONSTRAINT `fk_tutoren_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `DB1695063`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tutoren samt Informationen.';


-- -----------------------------------------------------
-- Table `DB1695063`.`leistung`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`leistung` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`leistung` (
  `benutzername` VARCHAR(20) NOT NULL,
  `fach` VARCHAR(30) NOT NULL,
  `stufen` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`benutzername`, `fach`, `stufen`),
  CONSTRAINT `fk_leistung_tutoren1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `DB1695063`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Leistungen eines Tutors.';


-- -----------------------------------------------------
-- Table `DB1695063`.`news`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`news` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`news` (
  `id` INT NOT NULL,
  `benutzername` VARCHAR(20) NOT NULL,
  `zeit` DATETIME NOT NULL,
  `nachricht` TEXT NOT NULL,
  `betreff` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Newsticker';


-- -----------------------------------------------------
-- Table `DB1695063`.`abrechnungen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DB1695063`.`abrechnungen` ;

CREATE TABLE IF NOT EXISTS `DB1695063`.`abrechnungen` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `zeit` DATETIME NOT NULL,
  `vorname` VARCHAR(45) NOT NULL,
  `nachname` VARCHAR(45) NOT NULL,
  `kreditkartennummer` VARCHAR(45) NOT NULL,
  `ablaufdatum` DATE NOT NULL,
  `pruefziffer` VARCHAR(4) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Enthält alle auszuführenden Zahlungen.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `DB1695063`.`mitglieder`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB1695063`;
INSERT INTO `DB1695063`.`mitglieder` (`benutzername`, `geschlecht`, `vorname`, `nachname`, `geburtsdatum`, `plz`, `wohnort`, `strasse`, `hausnummer`, `hnrzusatz`, `email`, `telefon`, `sprache`) VALUES ('admin', 1, 'Daniel', 'Irgendeiner', '2000-01-01', '12345', 'Irgendwo', 'Irgendeine', 1, '0', 'admin@spam.de', '123456', 'deutsch');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB1695063`.`login`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB1695063`;
INSERT INTO `DB1695063`.`login` (`benutzername`, `passwort`, `rolle`) VALUES ('admin', 'e8636ea013e682faf61f56ce1cb1ab5c', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB1695063`.`besucherzaehler`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB1695063`;
INSERT INTO `DB1695063`.`besucherzaehler` (`zaehler`) VALUES (0);

COMMIT;

